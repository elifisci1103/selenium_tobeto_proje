# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from webdriver_manager.chrome import ChromeDriverManager
from time import sleep
import passwordConstants as p

class Test_password_reset():

  def setup_method(self, method):
   self.driver = webdriver.Chrome(ChromeDriverManager().install())
   self.driver.get(p.PASSWORD_RESET_URL)
   self.driver.maximize_window
   self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_unsuccess_password_reset(self):
    
    epostaTextBox=self.driver.find_element(By.XPATH, p.EPOSTA_TEXT_BOX_XPATH)
    epostaTextBox.send_keys(p.INVALID_EPOSTA)
    sendButton=self.driver.find_element(By.XPATH, p.SEND_BUTTON_XPATH)
    sendButton.click()
    sleep(3)
    warningMessage=self.driver.find_element(By.XPATH,p.POPUP_MESSAGE_XPATH)
    sleep(3)
    assert warningMessage.text == p.INVALID_EPOSTA_MESSAGE
  
  def test_success_password_reset(self):

    epostaTextBox=self.driver.find_element(By.XPATH, p.EPOSTA_TEXT_BOX_XPATH)
    epostaTextBox.send_keys(p.VALID_EPOSTA)
    sendButton=self.driver.find_element(By.XPATH, p.SEND_BUTTON_XPATH)
    sendButton.click()
    sleep(3)
    warningMessage=self.driver.find_element(By.XPATH,p.POPUP_MESSAGE_XPATH)
    sleep(3)
    assert warningMessage.text == p.VALID_EPOSTA_MESSAGE

      
  
